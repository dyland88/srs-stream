# Global SRS Configuration
listen              1935; # RTMP listen port
max_connections     1000;
daemon              off; # Important for Docker, keeps SRS in the foreground
srs_log_tank        console; # Log to console, visible with `docker logs`

# HTTP server for HLS, HTTP-FLV, and API
http_server {
    enabled         on;
    listen          8080; # HTTP listen port
    dir             ./objs/nginx/html; # Default web root for SRS
    crossdomain     on;
}

# API for stream information (optional but useful)
http_api {
    enabled         on;
    listen          1985; # Default API port
}

# Stats for Prometheus/Grafana (optional)
stats {
    enabled         on;
    network         0; # Network device index for speed calculation
    disk            sda; # Disk name for IOPS
}

vhost __defaultVhost__ {
    # whether enable min delay mode for vhost.
    # For low latency, you'll want this 'on' eventually
    min_latency on; # Keeping your current setting for now

    tcp_nodelay on; # Keeping your current setting

    chunk_size 128;
    
    in_ack_size 0;
    out_ack_size 2500000;
    
    publish {
        mr off;
        mr_latency 350;
        firstpkt_timeout 20000;
        normal_timeout 7000;
        parse_sps on;
        try_annexb_first on;
        kickoff_for_idle 0;
    }
    
    play {
        gop_cache off; # Good for lower latency
        gop_cache_max_frames 2500;
        queue_length 3; # Consider reducing for lower latency (e.g., 3-5)
        time_jitter full;
        atc off;
        mix_correct off;
        atc_auto off;
        mw_latency 0; # Consider reducing for lower latency (e.g., 0-100)
        mw_msgs 0;      # Consider reducing for lower latency (e.g., 0-1)
        send_min_interval 0; # Consider 0 for lower latency
        reduce_sequence_header on;
    }

    # HLS configuration - Add this if you want HLS output
    hls {
        enabled         on;
        hls_path        ./objs/nginx/html; # Base path for HLS files
        hls_m3u8_file   [app]/[stream].m3u8; # M3U8 file pattern
        hls_ts_file     [app]/[stream]-[seq].ts; # TS segment file pattern
        hls_fragment    5;       # Fragment length in seconds (adjust for latency)
        hls_window      30;      # Playlist window in seconds (adjust for latency)
        hls_wait_keyframe on;
        hls_cleanup     on;
        hls_dispose     120;
    }

    # HTTP-FLV configuration - Add this if you want HTTP-FLV output
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
        hstrs       on;
    }
}